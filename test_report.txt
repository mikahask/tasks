
> react-typescript-starter@0.1.0 test
> react-scripts test --coverage

Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
PASS src/nested.test.ts
PASS src/arrays.test.ts
PASS src/objects.test.ts
PASS src/components/StartAttempt.test.tsx
FAIL src/components/TwoDice.test.tsx
  ‚óè TwoDice Component tests ‚Ä∫ Clicking left button changes first number

    expect(jest.fn()).toBeCalledTimes(expected)

    Expected number of calls: 3
    Received number of calls: 11

      52 |         leftButton.click();
      53 |         // Then the random function should be called 3 times
    > 54 |         expect(mathRandomFunction).toBeCalledTimes(3);
         |                                    ^
      55 |         // And the number to be 5
      56 |         const leftNumber = extractDigits(screen.getByTestId("left-die"));
      57 |         expect(leftNumber).toEqual(5);

      at Object.<anonymous> (src/components/TwoDice.test.tsx:54:36)

  ‚óè TwoDice Component tests ‚Ä∫ Clicking right button changes second number

    expect(jest.fn()).toBeCalledTimes(expected)

    Expected number of calls: 3
    Received number of calls: 8

      64 |         rightButton.click();
      65 |         // Then the random function should be called 3 times
    > 66 |         expect(mathRandomFunction).toBeCalledTimes(3);
         |                                    ^
      67 |         // And the number to be 5
      68 |         const rightNumber = extractDigits(screen.getByTestId("right-die"));
      69 |         expect(rightNumber).toEqual(5);

      at Object.<anonymous> (src/components/TwoDice.test.tsx:66:36)

  ‚óè TwoDice Component tests ‚Ä∫ Rolling two different numbers does not win or lose the game

    expect(received).toEqual(expected) // deep equality

    Expected: 1
    Received: 5

      82 |         const leftNumber = extractDigits(leftDie);
      83 |         const rightNumber = extractDigits(rightDie);
    > 84 |         expect(leftNumber).toEqual(1);
         |                            ^
      85 |         expect(rightNumber).toEqual(6);
      86 |         // And then the game is not won
      87 |         const winText = screen.queryByText(/Win/i);

      at Object.<anonymous> (src/components/TwoDice.test.tsx:84:28)

  ‚óè TwoDice Component tests ‚Ä∫ Getting snake eyes loses the game

    expect(received).toEqual(expected) // deep equality

    Expected: 1
    Received: 5

      106 |         const leftNumber = extractDigits(leftDie);
      107 |         const rightNumber = extractDigits(rightDie);
    > 108 |         expect(leftNumber).toEqual(1);
          |                            ^
      109 |         expect(rightNumber).toEqual(1);
      110 |         // And then the game is not won
      111 |         const winText = screen.queryByText(/Win/i);

      at Object.<anonymous> (src/components/TwoDice.test.tsx:108:28)

  ‚óè TwoDice Component tests ‚Ä∫ Getting matching numbers wins the game

    expect(received).toEqual(expected) // deep equality

    Expected: 5
    Received: 4

      129 |         const leftNumber = extractDigits(leftDie);
      130 |         const rightNumber = extractDigits(rightDie);
    > 131 |         expect(leftNumber).toEqual(5);
          |                            ^
      132 |         expect(rightNumber).toEqual(5);
      133 |         // And then the game is not lost
      134 |         const loseText = screen.queryByText(/Lose/i);

      at Object.<anonymous> (src/components/TwoDice.test.tsx:131:28)

PASS src/HtmlCss.test.tsx
PASS src/functions.test.ts
PASS src/components/ChangeType.test.tsx
FAIL src/components/CycleHoliday.test.tsx
  ‚óè CycleHoliday Component tests ‚Ä∫ An initial holiday is displayed

    TestingLibraryElementError: Unable to find an element with the text: /Holiday: (.*)/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, <script />, <style />
    [36m<body>[39m
      [36m<div>[39m
        [36m<div>[39m
          [0mCycle Holiday[0m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

       9 |
      10 |     test("An initial holiday is displayed", () => {
    > 11 |         const initialHoliday = screen.getByText(/Holiday: (.*)/i);
         |                                       ^
      12 |         expect(initialHoliday).toBeInTheDocument();
      13 |     });
      14 |

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:38:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:90:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:62:17
      at getByText (node_modules/@testing-library/dom/dist/query-helpers.js:111:19)
      at Object.<anonymous> (src/components/CycleHoliday.test.tsx:11:39)

  ‚óè CycleHoliday Component tests ‚Ä∫ There are two buttons

    TestingLibraryElementError: Unable to find an accessible element with the role "button" and name `/Alphabet/i`

    There are no accessible roles. But there might be some inaccessible roles. If you wish to access them, then set the `hidden` option to `true`. Learn more about this here: https://testing-library.com/docs/dom-testing-library/api-queries#byrole

    Ignored nodes: comments, <script />, <style />
    [36m<body>[39m
      [36m<div>[39m
        [36m<div>[39m
          [0mCycle Holiday[0m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      14 |
      15 |     test("There are two buttons", () => {
    > 16 |         const alphabetButton = screen.getByRole("button", {
         |                                       ^
      17 |             name: /Alphabet/i
      18 |         });
      19 |         const yearButton = screen.getByRole("button", {

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:38:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:90:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:62:17
      at getByRole (node_modules/@testing-library/dom/dist/query-helpers.js:111:19)
      at Object.<anonymous> (src/components/CycleHoliday.test.tsx:16:39)

  ‚óè CycleHoliday Component tests ‚Ä∫ Can cycle through 5 distinct holidays alphabetically

    TestingLibraryElementError: Unable to find an accessible element with the role "button" and name `/Alphabet/i`

    There are no accessible roles. But there might be some inaccessible roles. If you wish to access them, then set the `hidden` option to `true`. Learn more about this here: https://testing-library.com/docs/dom-testing-library/api-queries#byrole

    Ignored nodes: comments, <script />, <style />
    [36m<body>[39m
      [36m<div>[39m
        [36m<div>[39m
          [0mCycle Holiday[0m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      25 |
      26 |     test("Can cycle through 5 distinct holidays alphabetically", () => {
    > 27 |         const alphabetButton = screen.getByRole("button", {
         |                                       ^
      28 |             name: /Alphabet/i
      29 |         });
      30 |         const initialHoliday = screen.getByText(/Holiday ?[:)-](.*)/i);

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:38:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:90:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:62:17
      at getByRole (node_modules/@testing-library/dom/dist/query-helpers.js:111:19)
      at Object.<anonymous> (src/components/CycleHoliday.test.tsx:27:39)

  ‚óè CycleHoliday Component tests ‚Ä∫ Can cycle through 5 distinct holidays by year

    TestingLibraryElementError: Unable to find an accessible element with the role "button" and name `/Year/i`

    There are no accessible roles. But there might be some inaccessible roles. If you wish to access them, then set the `hidden` option to `true`. Learn more about this here: https://testing-library.com/docs/dom-testing-library/api-queries#byrole

    Ignored nodes: comments, <script />, <style />
    [36m<body>[39m
      [36m<div>[39m
        [36m<div>[39m
          [0mCycle Holiday[0m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      40 |
      41 |     test("Can cycle through 5 distinct holidays by year", () => {
    > 42 |         const yearButton = screen.getByRole("button", {
         |                                   ^
      43 |             name: /Year/i
      44 |         });
      45 |         const initialHoliday = screen.getByText(/Holiday ?[:)-](.*)/i);

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:38:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:90:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:62:17
      at getByRole (node_modules/@testing-library/dom/dist/query-helpers.js:111:19)
      at Object.<anonymous> (src/components/CycleHoliday.test.tsx:42:35)

PASS src/components/Counter.test.tsx
PASS src/components/RevealAnswer.test.tsx
PASS src/text.test.tsx
PASS src/App.test.tsx
-------------------|---------|----------|---------|---------|-------------------
File               | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s 
-------------------|---------|----------|---------|---------|-------------------
All files          |     100 |    98.86 |     100 |     100 |                   
 src               |     100 |    98.64 |     100 |     100 |                   
  App.tsx          |     100 |      100 |     100 |     100 |                   
  arrays.ts        |     100 |      100 |     100 |     100 |                   
  functions.ts     |     100 |      100 |     100 |     100 |                   
  nested.ts        |     100 |      100 |     100 |     100 |                   
  objects.ts       |     100 |       90 |     100 |     100 | 159               
 src/components    |     100 |      100 |     100 |     100 |                   
  ChangeType.tsx   |     100 |      100 |     100 |     100 |                   
  Counter.tsx      |     100 |      100 |     100 |     100 |                   
  CycleHoliday.tsx |     100 |      100 |     100 |     100 |                   
  RevealAnswer.tsx |     100 |      100 |     100 |     100 |                   
  StartAttempt.tsx |     100 |      100 |     100 |     100 |                   
  TwoDice.tsx      |     100 |      100 |     100 |     100 |                   
 src/interfaces    |       0 |        0 |       0 |       0 |                   
  answer.ts        |       0 |        0 |       0 |       0 |                   
  question.ts      |       0 |        0 |       0 |       0 |                   
-------------------|---------|----------|---------|---------|-------------------

Test Suites: 2 failed, 11 passed, 13 total
Tests:       9 failed, 92 passed, 101 total
Snapshots:   0 total
Time:        8.123 s
Ran all test suites.
